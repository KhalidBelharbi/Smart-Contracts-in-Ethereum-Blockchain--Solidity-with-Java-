package ethereum;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple4;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class Abi extends Contract {
    private static final String BINARY = "{\r\n"
            + "\t\"linkReferences\": {},\r\n"
            + "\t\"object\": \"6080604052600160005534801561001557600080fd5b5060018054600160a060020a031916331790556109a0806100376000396000f3006080604052600436106100b95763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306dbf8c681146100bb57806312065fe0146100f35780631fd8fe6d1461011a57806328a7a5051461012e57806365045c1414610139578063696c8afa1461015d5780638da5cb5b146101755780639cd84d86146101a6578063a5a80249146101be578063e2842d7914610207578063eb62b144146100bb578063f274c8971461026c575b005b3480156100c757600080fd5b506100df600160a060020a0360043516602435610290565b604080519115158252519081900360200190f35b3480156100ff57600080fd5b506101086102c2565b60408051918252519081900360200190f35b6100df600160a060020a03600435166102e2565b6100b960043561032b565b34801561014557600080fd5b506100df600435600160a060020a03602435166104f8565b34801561016957600080fd5b506100df600435610536565b34801561018157600080fd5b5061018a610583565b60408051600160a060020a039092168252519081900360200190f35b3480156101b257600080fd5b506100b9600435610592565b3480156101ca57600080fd5b506101d66004356105e3565b604080519415158552921515602085015283830191909152600160a060020a03166060830152519081900360800190f35b34801561021357600080fd5b5061021c610756565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610258578181015183820152602001610240565b505050509050019250505060405180910390f35b34801561027857600080fd5b506100df600160a060020a03600435166024356107b8565b600160a060020a0380831660008181526002602081815260408084208785529091529091200154909116145b92915050565b600154600090600160a060020a031633146102dc57600080fd5b50303190565b600154600090600160a060020a031633146102fc57600080fd5b506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161781555b919050565b61033361093b565b674563918244f4000034101561034857600080fd5b6000821161035557600080fd5b61035e8261080f565b151561036957600080fd5b3360009081526002602081815260408084208685529091529091205460ff168181111561039257fe5b14156103c2573360009081526002602090815260408083208584529091529020805460ff191660011790556104f4565b600180825242602080840191909152336040808501829052600080546060870181905260808701829052850181559182526002808452818320878452909352902083518154859492939192849260ff1990921691849081111561042157fe5b02179055506020820151600182810191909155604083015160028301805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055606083015160038084019190915560809093015160049092019190915560008054835492830184559290527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01556104be3361088f565b600580546001810182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018290555b5050565b60006001600160a060020a03831660009081526002602081815260408084208885529091529091205460ff169081111561052e57fe5b149392505050565b6000805b60055481101561057857600580548491908390811061055557fe5b6000918252602090912001541415610570576001915061057d565b60010161053a565b600091505b50919050565b600154600160a060020a031681565b6000811161059f57600080fd5b6105a93382610290565b15156105b457600080fd5b336000908152600260208181526040808420948452939052919020805460ff1916909117815542600490910155565b6000808080805b6004548110156107405760016002600060048481548110151561060957fe5b6000918252602080832090910154600160a060020a0316835282810193909352604091820181208a825290925290205460ff16600281111561064757fe5b14156106c957600160006002600060048581548110151561066457fe5b6000918252602080832090910154600160a060020a0316835282810193909352604091820181208b825290925290206001015460048054859081106106a557fe5b6000918252602090912001549297509095509350600160a060020a0316915061074e565b60028060006004848154811015156106dd57fe5b6000918252602080832090910154600160a060020a0316835282810193909352604091820181208a825290925290205460ff16600281111561071b57fe5b141561073857600060016002600060048581548110151561066457fe5b6001016105ea565b600094508493508392508291505b509193509193565b606060048054806020026020016040519081016040528092919081815260200182805480156107ae57602002820191906000526020600020905b8154600160a060020a03168152600190910190602001808311610790575b5050505050905090565b600154600090600160a060020a031633146107d257600080fd5b3031821161080657604051600160a060020a0384169083156108fc029084906000818181858888f1935050505090506102bc565b50600092915050565b600061081a82610536565b158061087a57503360008181526002602081815260408084208785529091529091200154600160a060020a031614801561087a57503360009081526002602081815260408084208685529091529091205460ff168181111561087857fe5b145b1561088757506001610326565b506000610326565b60005b6004548110156108dd5781600160a060020a03166004828154811015156108b557fe5b600091825260209091200154600160a060020a031614156108d5576104f4565b600101610892565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018054600160a060020a03841673ffffffffffffffffffffffffffffffffffffffff199091161790555050565b6040805160a081019091528060008152602001600081526020016000600160a060020a03168152602001600081526020016000815250905600a165627a7a72305820e899a2d2c9eaaafe1a807317418100a318f8546650a35e4b313d93f5f6d9ef940029\",\r\n"
            + "\t\"opcodes\": \"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x9A0 DUP1 PUSH2 0x37 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB9 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6DBF8C6 DUP2 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x1FD8FE6D EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x28A7A505 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x65045C14 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x696C8AFA EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x9CD84D86 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0xA5A80249 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xE2842D79 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xEB62B144 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x26C JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x108 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0xB9 PUSH1 0x4 CALLDATALOAD PUSH2 0x32B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x24 CALLDATALOAD AND PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH1 0x4 CALLDATALOAD PUSH2 0x536 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH2 0x583 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH1 0x4 CALLDATALOAD PUSH2 0x592 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH1 0x4 CALLDATALOAD PUSH2 0x5E3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 ISZERO ISZERO DUP6 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x258 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x240 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDF PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 SWAP2 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS BALANCE SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR DUP2 SSTORE JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x333 PUSH2 0x93B JUMP JUMPDEST PUSH8 0x4563918244F40000 CALLVALUE LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x35E DUP3 PUSH2 0x80F JUMP JUMPDEST ISZERO ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x392 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x3C2 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 DUP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x40 DUP1 DUP6 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP8 ADD DUP3 SWAP1 MSTORE DUP6 ADD DUP2 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x2 DUP1 DUP5 MSTORE DUP2 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP4 MSTORE SWAP1 KECCAK256 DUP4 MLOAD DUP2 SLOAD DUP6 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x421 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD DUP4 SLOAD SWAP3 DUP4 ADD DUP5 SSTORE SWAP3 SWAP1 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SSTORE PUSH2 0x4BE CALLER PUSH2 0x88F JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP3 SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x52E JUMPI INVALID JUMPDEST EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x578 JUMPI PUSH1 0x5 DUP1 SLOAD DUP5 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x555 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x570 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x57D JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x53A JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A9 CALLER DUP3 PUSH2 0x290 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 DUP5 MSTORE SWAP4 SWAP1 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR DUP2 SSTORE TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x609 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 DUP11 DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x647 JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x664 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 DUP12 DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP1 SLOAD DUP6 SWAP1 DUP2 LT PUSH2 0x6A5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP2 POP PUSH2 0x74E JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x6DD JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD DUP2 KECCAK256 DUP11 DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x71B JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x738 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x664 JUMPI INVALID JUMPDEST PUSH1 0x1 ADD PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x0 SWAP5 POP DUP5 SWAP4 POP DUP4 SWAP3 POP DUP3 SWAP2 POP JUMPDEST POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x7AE JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x790 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS BALANCE DUP3 GT PUSH2 0x806 JUMPI PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP1 POP PUSH2 0x2BC JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81A DUP3 PUSH2 0x536 JUMP JUMPDEST ISZERO DUP1 PUSH2 0x87A JUMPI POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ DUP1 ISZERO PUSH2 0x87A JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 DUP2 GT ISZERO PUSH2 0x878 JUMPI INVALID JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x887 JUMPI POP PUSH1 0x1 PUSH2 0x326 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0x8DD JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8B5 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0x8D5 JUMPI PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x892 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe8 SWAP10 LOG2 0xd2 0xc9 0xea 0xaa INVALID BYTE DUP1 PUSH20 0x17418100A318F8546650A35E4B313D93F5F6D9EF SWAP5 STOP 0x29 \",\r\n"
            + "\t\"sourceMap\": \"31:5775:0:-;;;141:1;123:19;;968:94;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1000:5:0;:18;;-1:-1:-1;;;;;;1000:18:0;1008:10;1000:18;;;31:5775;;;;;;\"\r\n"
            + "}";

    public static final String FUNC_HASHISEXIST = "HashIsExist";

    public static final String FUNC_GETBALANCE = "getBalance";

    public static final String FUNC_CHANGETHEOWNERCONTRACT = "changeTheOwnerContract";

    public static final String FUNC_ADDFILE = "AddFile";

    public static final String FUNC_ISVALIDATED = "isValidated";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_DELETEDOC = "deleteDoc";

    public static final String FUNC_GETSTATEOFDOC = "getStateOfDoc";

    public static final String FUNC_GETALLUSERS = "getAllUsers";

    public static final String FUNC_ISLINKEDTO = "isLinkedTo";

    public static final String FUNC_WITHDRAWMONEY = "withdrawMoney";

    @Deprecated
    protected Abi(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

  //  protected Abi(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
 //       super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
 //   }

    @Deprecated
    protected Abi(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Abi(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<Boolean> HashIsExist(String user, byte[] h) {
        final Function function = new Function(FUNC_HASHISEXIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.generated.Bytes32(h)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<BigInteger> getBalance() {
        final Function function = new Function(FUNC_GETBALANCE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> changeTheOwnerContract(String adr, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_CHANGETHEOWNERCONTRACT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(adr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<TransactionReceipt> AddFile(byte[] hash_, BigInteger weiValue) {
        final Function function = new Function(
                FUNC_ADDFILE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(hash_)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteCall<Boolean> isValidated(byte[] hash_, String adr) {
        final Function function = new Function(FUNC_ISVALIDATED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(hash_), 
                new org.web3j.abi.datatypes.Address(adr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> HashIsExist(byte[] h) {
        final Function function = new Function(FUNC_HASHISEXIST, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(h)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> owner() {
        final Function function = new Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> deleteDoc(byte[] hash_) {
        final Function function = new Function(
                FUNC_DELETEDOC, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(hash_)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple4<Boolean, Boolean, BigInteger, String>> getStateOfDoc(byte[] hash_) {
        final Function function = new Function(FUNC_GETSTATEOFDOC, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(hash_)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Bool>() {}, new TypeReference<Uint256>() {}, new TypeReference<Address>() {}));
        return new RemoteCall<Tuple4<Boolean, Boolean, BigInteger, String>>(
                new Callable<Tuple4<Boolean, Boolean, BigInteger, String>>() {
                    @Override
                    public Tuple4<Boolean, Boolean, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple4<Boolean, Boolean, BigInteger, String>(
                                (Boolean) results.get(0).getValue(), 
                                (Boolean) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue());
                    }
                });
    }

    public RemoteCall<List> getAllUsers() {
        final Function function = new Function(FUNC_GETALLUSERS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<Boolean> isLinkedTo(String user, byte[] doc) {
        final Function function = new Function(FUNC_ISLINKEDTO, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(user), 
                new org.web3j.abi.datatypes.generated.Bytes32(doc)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> withdrawMoney(String theOwner, BigInteger ethers) {
        final Function function = new Function(
                FUNC_WITHDRAWMONEY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(theOwner), 
                new org.web3j.abi.datatypes.generated.Uint256(ethers)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

   // public static RemoteCall<Abi> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
    //    return deployRemoteCall(Abi.class, web3j, credentials, contractGasProvider, BINARY, "");
   // }

   // public static RemoteCall<Abi> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
  //      return deployRemoteCall(Abi.class, web3j, transactionManager, contractGasProvider, BINARY, "");
  //  }

    @Deprecated
    public static RemoteCall<Abi> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Abi.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Abi> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Abi.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static Abi load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Abi(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Abi load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Abi(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

//    public static Abi load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
//        return new Abi(contractAddress, web3j, credentials, contractGasProvider);
//    }

    public static Abi load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Abi(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
